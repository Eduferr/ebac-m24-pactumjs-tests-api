{
  "stats": {
    "suites": 6,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-10-29T21:05:12.272Z",
    "end": "2025-10-29T21:05:37.003Z",
    "duration": 24731
  },
  "results": [
    {
      "uuid": "1eaa3de0-9b5a-4312-af3b-97d6550b8f6d",
      "title": "",
      "fullFile": "",
      "file": "C:\\_Repositorio\\01_Projetos\\ebac-m24-pactumjs-tests-api\\teste\\api\\categorias\\adicionarCategoria.test.js",
      "beforeHooks": [
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 346,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await gerarToken();",
          "err": {},
          "uuid": "390fb26e-0a1c-4fa0-9f5a-669656618dc2",
          "parentUUID": "1eaa3de0-9b5a-4312-af3b-97d6550b8f6d",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 302,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await gerarToken();",
          "err": {},
          "uuid": "591a1bea-1f1c-4c90-9770-ceb611d4d8ba",
          "parentUUID": "1eaa3de0-9b5a-4312-af3b-97d6550b8f6d",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 378,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await gerarToken();",
          "err": {},
          "uuid": "9154c5f6-c705-4abd-81e0-836c721960b9",
          "parentUUID": "1eaa3de0-9b5a-4312-af3b-97d6550b8f6d",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [
        {
          "title": "API - Cadastrar nova Categoria",
          "fullTitle": "API - Cadastrar nova Categoria",
          "timedOut": false,
          "duration": 73,
          "state": "passed",
          "speed": "medium",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const categoriaFake = factory.categoria(); // gera dados dinâmicos\n    await spec()\n        .post('/api/addCategory') // endpoint para cadastrar categoria\n        .withHeaders(\"Authorization\", token)\n        .withJson(categoriaFake)\n        .expectStatus(200)\n        .expectJson('success', true)\n        .expectJson('message', 'category added')\n        .expectJsonMatch({\n            data: {\n                _id: regex(/^[a-f0-9]{24}$/),\n                name: like(\"Nome do produto\"),\n                photo: like(\"fotoproduto.png.com.br\")\n            }\n        })",
          "err": {},
          "uuid": "30d3c298-4cab-4593-9b6c-19610dacbb11",
          "parentUUID": "1eaa3de0-9b5a-4312-af3b-97d6550b8f6d",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Deletar uma categoria",
          "fullTitle": "API - Deletar uma categoria",
          "timedOut": false,
          "duration": 100,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const categoriaFake = factory.categoria();\n    // Para o teste ficar individualizado, executa um novo cadastro para retornar o Id\n    const categoriaId = await spec()\n        .post('/api/addCategory')\n        .withHeaders(\"Authorization\", token)\n        .withJson(categoriaFake)\n        .returns('data._id');\n    //console.log('Id cadastrado:', categoriaId);\n    await spec()\n        .delete(`/api/deleteCategory/${categoriaId}`)\n        .withHeaders(\"Authorization\", token)\n        .expectStatus(200)\n        .expectJson('success', true)\n        .expectJson('message', 'category deleted')",
          "err": {},
          "uuid": "c2049d07-1565-4a4d-8649-21f06696696d",
          "parentUUID": "1eaa3de0-9b5a-4312-af3b-97d6550b8f6d",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Editar categoria",
          "fullTitle": "API - Editar categoria",
          "timedOut": false,
          "duration": 125,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const categoriaFake = factory.categoria();\n    // Para o teste ficar individualizado, executa um novo cadastro para retornar o Id\n    const categoriaId = await spec()\n        .post('/api/addCategory')\n        .withHeaders(\"Authorization\", token)\n        .withJson(categoriaFake)\n        .returns('data._id');\n    //console.log('Id cadastrado:', categoriaId);\n    await spec()\n        .put(`/api/editCategory/${categoriaId}`)\n        .withHeaders(\"Authorization\", token)\n        .withJson({\n            \"name\": \"NomeEditado\",\n            \"photo\": \"fotoEditada.png.com.br\"\n        })\n        .expectStatus(200)\n        .expectJson('success', true)\n        .expectJson('message', 'category updated')",
          "err": {},
          "uuid": "a3bd3dd6-a1c9-4999-92bc-2adcd3bb91ea",
          "parentUUID": "1eaa3de0-9b5a-4312-af3b-97d6550b8f6d",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "30d3c298-4cab-4593-9b6c-19610dacbb11",
        "c2049d07-1565-4a4d-8649-21f06696696d",
        "a3bd3dd6-a1c9-4999-92bc-2adcd3bb91ea"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 298,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "d2dc9ee4-058c-4c89-b26a-15e4f52ae498",
      "title": "",
      "fullFile": "",
      "file": "C:\\_Repositorio\\01_Projetos\\ebac-m24-pactumjs-tests-api\\teste\\contract\\contratoCategoria\\apiAddCategoria.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 6,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "976816d1-bdf8-4d88-8e44-38cc7c1f6722",
          "parentUUID": "d2dc9ee4-058c-4c89-b26a-15e4f52ae498",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 420,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await gerarToken();",
          "err": {},
          "uuid": "3c97507e-099a-4a93-9db7-4b10e083fe2a",
          "parentUUID": "d2dc9ee4-058c-4c89-b26a-15e4f52ae498",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 362,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();\nawait reporter.end();",
          "err": {},
          "uuid": "20410f90-d1f5-458a-b9d6-15621571d7a7",
          "parentUUID": "d2dc9ee4-058c-4c89-b26a-15e4f52ae498",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "API - Teste de Contrato - Adicionar categoria",
          "fullTitle": "API - Teste de Contrato - Adicionar categoria",
          "timedOut": false,
          "duration": 142,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const categoriaFake = factory.categoria(); // gera dados dinâmicos\n    await flow('Cadastrar Categoria')\n        .post('http://lojaebac.ebaconline.art.br/api/addCategory')\n        .withHeaders('Authorization', token)\n        .withJson(categoriaFake)\n        .expectStatus(200)\n        .expectJson('success', true)\n        .expectJson('message', 'category added')\n        .expectJsonMatch({\n            data: {\n                _id: regex(/^[a-f0-9]{24}$/), // valida formato do ID\n                name: like('Nome da Categoria'),\n                photo: like('fotoCategoria.png.com.br'),\n            },\n        });",
          "err": {},
          "uuid": "ca18a153-6170-49a3-874d-9caf79f15e36",
          "parentUUID": "d2dc9ee4-058c-4c89-b26a-15e4f52ae498",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "ca18a153-6170-49a3-874d-9caf79f15e36"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 142,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "cdbc882c-72a0-4eb5-9177-6387d328cc77",
      "title": "",
      "fullFile": "",
      "file": "C:\\_Repositorio\\01_Projetos\\ebac-m24-pactumjs-tests-api\\teste\\contract\\contratoProduto\\apiAddProduto.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 9,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "317633a5-fc24-44ef-91c1-f9cc63a1ba9f",
          "parentUUID": "cdbc882c-72a0-4eb5-9177-6387d328cc77",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 541,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await gerarToken();",
          "err": {},
          "uuid": "60c3eece-c516-4041-8bed-1869092ad847",
          "parentUUID": "cdbc882c-72a0-4eb5-9177-6387d328cc77",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 230,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();\nawait reporter.end();",
          "err": {},
          "uuid": "fee6da48-f016-4f58-b706-0b3f3d199d09",
          "parentUUID": "cdbc882c-72a0-4eb5-9177-6387d328cc77",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "API - Teste de Contrato - Adicionar produto",
          "fullTitle": "API - Teste de Contrato - Adicionar produto",
          "timedOut": false,
          "duration": 213,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const produtoFake = factory.produto(); // gera dados dinâmicos\n    await flow('Cadastrar Produto')\n        .post('http://lojaebac.ebaconline.art.br/api/addProduct')\n        .withHeaders('Authorization', token)\n        .withJson(produtoFake)\n        .expectStatus(200)\n        .expectJson('success', true)\n        .expectJson('message', 'product added')\n        .expectJsonMatch({\n            data: {\n                _id: regex(/^[a-f0-9]{24}$/),\n                name: like(\"NomeProduto\"),\n                price: like(100)\n            }\n        })",
          "err": {},
          "uuid": "2d820c49-3073-4842-8c45-d3f70bd29e18",
          "parentUUID": "cdbc882c-72a0-4eb5-9177-6387d328cc77",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "2d820c49-3073-4842-8c45-d3f70bd29e18"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 213,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "5b354b06-171d-42c5-925f-5f6ff5ce8ea1",
      "title": "",
      "fullFile": "",
      "file": "C:\\_Repositorio\\01_Projetos\\ebac-m24-pactumjs-tests-api\\teste\\contract\\contratoCategoria\\frontAddCategoria.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 7,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "345ca7d2-fdda-4e2d-a9b3-aa88496ccaad",
          "parentUUID": "5b354b06-171d-42c5-925f-5f6ff5ce8ea1",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 306,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();\nawait reporter.end();",
          "err": {},
          "uuid": "cd11221c-c2e7-4cf6-9b89-2d83cd955e26",
          "parentUUID": "5b354b06-171d-42c5-925f-5f6ff5ce8ea1",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "FRONT - Teste de Contrato - Adicionar categoria",
          "fullTitle": "FRONT - Teste de Contrato - Adicionar categoria",
          "timedOut": false,
          "duration": 93,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow(\"Add Category\")\n    .useInteraction('Add Category Response')\n    .post('http://localhost:4000/api/addCategory')\n    .withHeaders(\"Authorization\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\")\n    .withJson({\n        \"name\": \"Categoria Teste\",\n        \"photo\": \"https://imagemfake.com/foto.png\"\n    })\n    .expectStatus(200)\n    .expectJson('success', true)\n    .expectJson('message', 'category added');",
          "err": {},
          "uuid": "b0a2cad6-2bb2-4c55-9e36-e02a2619b749",
          "parentUUID": "5b354b06-171d-42c5-925f-5f6ff5ce8ea1",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "b0a2cad6-2bb2-4c55-9e36-e02a2619b749"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 93,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "3064c954-2b03-41dd-b76e-530edcada769",
      "title": "",
      "fullFile": "",
      "file": "C:\\_Repositorio\\01_Projetos\\ebac-m24-pactumjs-tests-api\\teste\\contract\\contratoProduto\\frontAddProduto.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 9,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);",
          "err": {},
          "uuid": "c78b9559-aa01-44d5-b7d4-3d4a73026c6e",
          "parentUUID": "3064c954-2b03-41dd-b76e-530edcada769",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 235,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();\nawait reporter.end();",
          "err": {},
          "uuid": "6c464224-3980-4442-9ecc-2a1ba82f8601",
          "parentUUID": "3064c954-2b03-41dd-b76e-530edcada769",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "FRONT - Teste de Contrato - Adicionar Produto",
          "fullTitle": "FRONT - Teste de Contrato - Adicionar Produto",
          "timedOut": false,
          "duration": 145,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow(\"Add Product\")\n    .useInteraction('Add Product Response')\n    .post('http://localhost:4000/api/addProduct')\n    .withHeaders(\"Authorization\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\")\n    .withJson({\n        \"name\": \"Produto Teste\",\n        \"photo\": \"https://imagemfake.com/foto.png\"\n    })\n    .expectStatus(200)\n    .expectJson('success', true)\n    .expectJson('message', 'product added');",
          "err": {},
          "uuid": "42d5ba41-3be1-49f3-8239-38ba586d2581",
          "parentUUID": "3064c954-2b03-41dd-b76e-530edcada769",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "42d5ba41-3be1-49f3-8239-38ba586d2581"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 145,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "34dbebcd-c211-439a-bf21-efd81b7397a0",
      "title": "",
      "fullFile": "",
      "file": "C:\\_Repositorio\\01_Projetos\\ebac-m24-pactumjs-tests-api\\teste\\api\\produtos\\adicionarProduto.test.js",
      "beforeHooks": [
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 585,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await gerarToken();",
          "err": {},
          "uuid": "9c7d7e7d-31d6-47d9-a40f-c6a8d6513ffa",
          "parentUUID": "34dbebcd-c211-439a-bf21-efd81b7397a0",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 334,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await gerarToken();",
          "err": {},
          "uuid": "779ce266-7660-4dbd-9ccb-33b7f423d28b",
          "parentUUID": "34dbebcd-c211-439a-bf21-efd81b7397a0",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 295,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await gerarToken();",
          "err": {},
          "uuid": "f0bdfc26-a2cc-4f39-a9e8-565a2c334270",
          "parentUUID": "34dbebcd-c211-439a-bf21-efd81b7397a0",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [
        {
          "title": "API - Cadastrar novo Produto",
          "fullTitle": "API - Cadastrar novo Produto",
          "timedOut": false,
          "duration": 188,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const produtoFake = factory.produto(); // gera dados fake do produto\n    await spec()\n        .post('/api/addProduct')\n        .withHeaders(\"Authorization\", token)\n        .withJson(produtoFake)\n        .expectStatus(200)\n        .expectJson('success', true)\n        .expectJson('message', 'product added')\n        .expectJsonMatch({\n            data: {\n                _id: regex(/^[a-f0-9]{24}$/),\n                name: like(\"NomeProduto\"),\n                price: like(100)\n            }\n        })",
          "err": {},
          "uuid": "0d46e685-ba9b-4cf4-8674-87eab0b28066",
          "parentUUID": "34dbebcd-c211-439a-bf21-efd81b7397a0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Deletar um produto",
          "fullTitle": "API - Deletar um produto",
          "timedOut": false,
          "duration": 229,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const produtoFake = factory.produto();\n    // Para o teste ficar individualizado, executa um novo cadastro para retornar o Id\n    const produtoId = await spec()\n        .post('/api/addProduct')\n        .withHeaders(\"Authorization\", token)\n        .withJson(produtoFake)\n        .returns('data._id');\n    await spec()\n        .delete(`/api/deleteProduct/${produtoId}`)\n        .withHeaders(\"Authorization\", token)\n        .expectStatus(200)\n        .expectJson('success', true)\n        .expectJson('message', 'product deleted');",
          "err": {},
          "uuid": "bc7f9bcf-cf8b-46c3-92c4-0ff70f370b48",
          "parentUUID": "34dbebcd-c211-439a-bf21-efd81b7397a0",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "API - Editar produto",
          "fullTitle": "API - Editar produto",
          "timedOut": false,
          "duration": 215,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const produtoFake = factory.produto();\n    // Para o teste ficar individualizado, executa um novo cadastro para retornar o Id\n    const produtoId = await spec()\n        .post('/api/addProduct')\n        .withHeaders(\"Authorization\", token)\n        .withJson(produtoFake)\n        .returns('data._id');\n    await spec()\n        .put(`/api/editProduct/${produtoId}`)\n        .withHeaders(\"Authorization\", token)\n        .withJson({\n            \"name\": \"Texugo Black\",\n            \"price\": 100,\n            \"quantity\": 50\n        })\n        .expectStatus(200)\n        .expectJson('success', true)\n        .expectJson('message', 'product updated')",
          "err": {},
          "uuid": "706cf2cd-61e7-406e-8286-9558ddca4d79",
          "parentUUID": "34dbebcd-c211-439a-bf21-efd81b7397a0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "0d46e685-ba9b-4cf4-8674-87eab0b28066",
        "bc7f9bcf-cf8b-46c3-92c4-0ff70f370b48",
        "706cf2cd-61e7-406e-8286-9558ddca4d79"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 632,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.4"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "cat-report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "reportFilename": "cat-report",
        "json": "true",
        "html": "false",
        "quiet": "true"
      },
      "version": "6.3.0"
    }
  }
}